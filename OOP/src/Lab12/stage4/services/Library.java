package Lab12.stage4.services;

import java.util.ArrayList;
import java.util.List;

import Lab12.stage4.errors.ItemNotFoundException;
import Lab12.stage4.models.LibraryItem;

public class Library {
    private List<LibraryItem> items = new ArrayList<>();

    // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    public void addItem(LibraryItem item) {
        items.add(item);
    }

    // –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    public void listAllItems() {
        System.out.println("\nüìö –í—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏:");
        for (int i = 0; i < items.size(); i++) {
            LibraryItem item = items.get(i);
            System.out.printf("%d. %s %s\n", i + 1, item.getInfo(),
                    item.isAvailable() ? "(–¥–æ—Å—Ç—É–ø–Ω–∏–π)" : "(–ø–æ–∑–∏—á–µ–Ω–æ)");
        }
    }

    // –í—ã–≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    public void listAvailableItems() {
        System.out.println("\nüìö –î–æ—Å—Ç—É–ø–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏:");
        int count = 0;
        for (LibraryItem item : items) {
            if (item.isAvailable()) {
                System.out.println((count + 1) + ". " + item.getInfo());
                count++;
            }
        }
        if (count == 0) {
            System.out.println("  –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤.");
        }
    }

    // –í–∑—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ –Ω–æ–º–µ—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
    public LibraryItem borrowItem(int number) throws ItemNotFoundException {
        int count = 0;
        for (LibraryItem item : items) {
            if (item.isAvailable()) {
                count++;
                if (count == number) {
                    item.borrowItem();
                    return item;
                }
            }
        }
        throw new ItemNotFoundException("–ü—Ä–µ–¥–º–µ—Ç –∑ –Ω–æ–º–µ—Ä–æ–º \'" + number + "\' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    }

    // –í–µ—Ä–Ω—É—Ç—å –ø—Ä–µ–¥–º–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
    public void returnItem(LibraryItem item) throws ItemNotFoundException {
        if (item != null) {
            item.returnItem();
            return;
        }
        throw new ItemNotFoundException("–ü—Ä–µ–¥–º–µ—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    }
}
